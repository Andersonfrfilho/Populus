comands
//inicializa a maquina virutakl
docker run
//mostra as imagens do docker
docker ps
//mostra as imagens do docker mesmo paradas
docker ps -a
//para um container do docker
docker stop NAMES

//eslint configure
"eslint.packageManager": "yarn",
"[javascript]":{
  "editor.codeActionsOnSave:{
    "source.fixAll.eslint":true,
  }
},
"[javascriptreact]":{
  "editor.codeActionsOnSave:{
    "source.fixAll.eslint":true,
  }
},

//arrumar todos os arquivos eslint
yarn eslint --fix src --ext .js

//create a migrations
yarn sequelize migration:create --name=create-users
//rodar migrate
yarn sequelize db:migrate
//Revertendo as modificações mais recentes.
yarn sequelize db:migrate:undo
//Podendo desfazer para o estado inicial.
yarn sequelize db:migrate:undo:all
//Ou pode reverter somente uma migration específica.
yarn sequelize db:migrate:undo:all --to XXXXXXXXXXXXXX-create-users.js
//Desfazendo dos seeders mais recentes.
yarn sequelize db:seed:undo
yarn sequelize seed:generate --name
//Reverter um seed específico.
yarn sequelize db:seed:undo --seed name-of-seed-as-in-data
//Se desfazendo de todos a seeders gerados até o presente momento.
yarn sequelize db:seed:undo:all
//rodando a seeders
yarn sequelize db:sequelize db:seed:all
requisitos para windows com docker
1- node10
2 - visual code
1º - docker run --name database -e POSTGRES_PASSWORD=102030 -p 5432:5432 -d postgres
2º - docker run --name mongodatabase -p 27017:27017 -d -t mongo
  - in chrome localhost:27017
3º - docker run --name redisqueue -p 6379:6379 -d -t redis:alpine
sem docker
1-postgres
2-mongoDb
3-ubuntu live windows
  1-sudo apt-get update
  2-sudo apt-get upgrade
  3-sudo apt-get install redis-server
  4-redis-cli -v
  5-sudo service redis-server restart
git remote add deploy endereço git
